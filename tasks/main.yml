---

- name: Assert that OS family is supported
  ansible.builtin.assert:
    that: ansible_os_family | lower in ['debian', 'redhat']
    fail_msg: "Unsupported OS family: {{ ansible_os_family }}"

- name: Include OS-specific variables
  ansible.builtin.include_vars:
    file: "{{ ansible_os_family }}.yml"

# Note: we don't use the GitHub API to retrieve the latest version because
# it has rate limits which are hard to avoid in CI (we need a token, authenticate
# with the API, etc.). Instead, we browse the latest release url which redirects
# to the release page, where we can find the version number in the URL.

- name: Get/parse release info
  delegate_to: localhost
  run_once: true
  block:
    - name: Get latest release information from GitHub
      ansible.builtin.uri:
        url: "{{ mergerfs_github_repo_url }}/releases/latest"
      register: mergerfs_github_release_page
      check_mode: false
      when: mergerfs_version == "latest"

    - name: Set latest mergerfs version fact
      ansible.builtin.set_fact:
        mergerfs_version: "{{ mergerfs_github_release_page['url'].split('/')[-1] }}"
      when: mergerfs_version == "latest"

    - name: Determine package download url
      ansible.builtin.set_fact:
        mergerfs_package_url: >-
          {{ mergerfs_github_repo_url }}/releases/download/{{ mergerfs_version }}/{{
          mergerfs_pkg_prefix ~ mergerfs_version ~ mergerfs_pkg_suffix }}

- name: Install mergerfs
  ansible.builtin.include_tasks:
    file: install_{{ ansible_os_family | lower }}.yml

- name: Install mergerfs-tools
  ansible.builtin.include_tasks:
    file: install_mergerfs_tools.yml
  when: mergerfs_install_tools

- name: Mount mergerfs filesystems
  ansible.posix.mount:
    fstype: fuse.mergerfs
    src: "{{ ':'.join(item.branches | mandatory) }}"
    path: "{{ item.path | mandatory(msg='`path` must be defined for all mergerfs_mounts.') }}"
    opts: "{{ item.options | default('defaults') }}"
    state: "{{ item.state | default('mounted') }}"
  loop: "{{ mergerfs_mounts }}"
  become: true

- name: Unmount unlisted mergerfs filesystems
  when: mergerfs_remove_undefined_mounts
  block:
    - name: List existing mergerfs filesystems
      # ansible_mounts doesn't list fuse mounts
      ansible.builtin.command: "findmnt -t fuse.mergerfs -o TARGET -n"
      changed_when: false
      register: existing_mergerfs_mounts

    - name: Unmount mergerfs filesystems
      ansible.posix.mount:
        path: "{{ item }}"
        state: absent
      loop: "{{ existing_mergerfs_mounts.stdout_lines }}"
      when: item not in mergerfs_mounts | map(attribute='path') | list
